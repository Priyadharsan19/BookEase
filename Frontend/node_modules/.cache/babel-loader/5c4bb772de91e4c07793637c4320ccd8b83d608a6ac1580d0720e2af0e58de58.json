{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8800/backend';\n\n// Authentication Endpoints\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Login failed');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const register = async (username, email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Registration failed');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Booking Endpoints\nexport const fetchBookings = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/waiting`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch bookings');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchBookingById = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/${id}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch booking details');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createBooking = async bookingData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bookingData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create booking');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateBooking = async (id, updatedBookingData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedBookingData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update booking');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteBooking = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete booking');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// User Endpoints\nexport const fetchUsers = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch users');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchUserById = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users/${id}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch user details');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateUser = async (id, updatedUserData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedUserData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update user');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete user');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","register","email","fetchBookings","fetchBookingById","id","createBooking","bookingData","updateBooking","updatedBookingData","deleteBooking","fetchUsers","fetchUserById","updateUser","updatedUserData","deleteUser"],"sources":["C:/Users/HP/Downloads/BookEase/frontend/src/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8800/backend';\r\n\r\n// Authentication Endpoints\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ username, password })\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Login failed');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const register = async (username, email, password) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ username, email, password })\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Registration failed');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Booking Endpoints\r\nexport const fetchBookings = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/waiting`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch bookings');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchBookingById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch booking details');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBooking = async (bookingData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/create`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(bookingData)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to create booking');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBooking = async (id, updatedBookingData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updatedBookingData)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to update booking');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBooking = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete booking');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// User Endpoints\r\nexport const fetchUsers = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch users');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch user details');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUser = async (id, updatedUserData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updatedUserData)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to update user');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete user');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}