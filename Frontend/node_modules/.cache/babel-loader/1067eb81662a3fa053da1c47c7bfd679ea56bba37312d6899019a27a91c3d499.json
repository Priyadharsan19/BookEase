{"ast":null,"code":"// src/api.js\nconst API_BASE_URL = 'http://localhost:8800/backend';\n\n// Authentication Endpoints\nexport const login = async (username, password) => {\n  try {\n    // Implement login API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const register = async (username, email, password) => {\n  try {\n    // Implement register API call\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Booking Endpoints\nexport const fetchBookings = async () => {\n  try {\n    // Implement fetchBookings API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchBookingById = async id => {\n  try {\n    // Implement fetchBookingById API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createBooking = async bookingData => {\n  try {\n    // Implement createBooking API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateBooking = async (id, updatedBookingData) => {\n  try {\n    // Implement updateBooking API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteBooking = async id => {\n  try {\n    // Implement deleteBooking API call\n  } catch (error) {\n    throw error;\n  }\n};\n\n// User Endpoints\nexport const fetchUsers = async () => {\n  try {\n    // Implement fetchUsers API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchUserById = async id => {\n  try {\n    // Implement fetchUserById API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateUser = async (id, updatedUserData) => {\n  try {\n    // Implement updateUser API call\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    // Implement deleteUser API call\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Add functions for other endpoints like updating and deleting bookings/users if needed","map":{"version":3,"names":["API_BASE_URL","login","username","password","error","register","email","fetchBookings","fetchBookingById","id","createBooking","bookingData","updateBooking","updatedBookingData","deleteBooking","fetchUsers","fetchUserById","updateUser","updatedUserData","deleteUser"],"sources":["C:/Users/HP/Downloads/BookEase/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nconst API_BASE_URL = 'http://localhost:8800/backend';\r\n\r\n// Authentication Endpoints\r\nexport const login = async (username, password) => {\r\n  try {\r\n    // Implement login API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const register = async (username, email, password) => {\r\n  try {\r\n    // Implement register API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Booking Endpoints\r\nexport const fetchBookings = async () => {\r\n  try {\r\n    // Implement fetchBookings API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchBookingById = async (id) => {\r\n  try {\r\n    // Implement fetchBookingById API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBooking = async (bookingData) => {\r\n  try {\r\n    // Implement createBooking API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBooking = async (id, updatedBookingData) => {\r\n  try {\r\n    // Implement updateBooking API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBooking = async (id) => {\r\n  try {\r\n    // Implement deleteBooking API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// User Endpoints\r\nexport const fetchUsers = async () => {\r\n  try {\r\n    // Implement fetchUsers API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserById = async (id) => {\r\n  try {\r\n    // Implement fetchUserById API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUser = async (id, updatedUserData) => {\r\n  try {\r\n    // Implement updateUser API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    // Implement deleteUser API call\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add functions for other endpoints like updating and deleting bookings/users if needed\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,+BAA+B;;AAEpD;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF;EAAA,CACD,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOH,QAAQ,EAAEI,KAAK,EAAEH,QAAQ,KAAK;EAC3D,IAAI;IACF;EAAA,CACD,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF;EAAA,CACD,CAAC,OAAOH,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EAC5C,IAAI;IACF;EAAA,CACD,CAAC,OAAOL,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF;EAAA,CACD,CAAC,OAAOP,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOH,EAAE,EAAEI,kBAAkB,KAAK;EAC7D,IAAI;IACF;EAAA,CACD,CAAC,OAAOT,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,aAAa,GAAG,MAAOL,EAAE,IAAK;EACzC,IAAI;IACF;EAAA,CACD,CAAC,OAAOL,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF;EAAA,CACD,CAAC,OAAOX,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMY,aAAa,GAAG,MAAOP,EAAE,IAAK;EACzC,IAAI;IACF;EAAA,CACD,CAAC,OAAOL,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAOR,EAAE,EAAES,eAAe,KAAK;EACvD,IAAI;IACF;EAAA,CACD,CAAC,OAAOd,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMe,UAAU,GAAG,MAAOV,EAAE,IAAK;EACtC,IAAI;IACF;EAAA,CACD,CAAC,OAAOL,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}